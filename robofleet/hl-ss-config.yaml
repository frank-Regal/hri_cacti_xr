# Packages must be generated first. To do so
# run the following from this files directory
# rosrun robofleet_client generate_plugin_pkg.py -o ./../.. -w $(cat rf_packages.txt)
params:
  host_url: "ws://192.168.12.58:8080"

  wait_for_pongs: false
  max_queue_before_waiting: 5

  # uncomment to run in Direct Mode
  #direct_mode_port: 8080
  #direct_mode_bytes_per_sec: 2048000

  # Verbosity 0 - MINIMAL
  # Verbosity 1 - CONFIG_ONLY
  # Verbosity 2 - ALL
  verbosity: 1

  # you may need more threads to handle a large amount of traffic
  spin_threads: 8

# Publish information to Robofleet Server
subscribers: [ 
]

# Subscribe to information on Robofleet Server
publishers: [ 
  { # Receive stop messages
    client_topic: "/hololens/LEFT_LEFT/stop",
    rbf_topic: "/hololens/LEFT_LEFT/stop",
    type: "std_msgs/Empty",
    no_drop: true
  },
  { # Receive stop messages
    client_topic: "/hololens/LEFT_FRONT/stop",
    rbf_topic: "/hololens/LEFT_FRONT/stop",
    type: "std_msgs/Empty",
    no_drop: true
  },
  { # Receive stop messages
    client_topic: "/hololens/RIGHT_RIGHT/stop",
    rbf_topic: "/hololens/RIGHT_RIGHT/stop",
    type: "std_msgs/Empty",
    no_drop: true
  },
  { # Receive stop messages
    client_topic: "/hololens/RIGHT_FRONT/stop",
    rbf_topic: "/hololens/RIGHT_FRONT/stop",
    type: "std_msgs/Empty",
    no_drop: true
  },
  { # Receive stop messages
    client_topic: "/hololens/PV/image/stop",
    rbf_topic: "/hololens/PV/image/stop",
    type: "std_msgs/Empty",
    no_drop: true
  },
  { # Receive start messages
    client_topic: "/hololens/natural_input_capture/start",
    rbf_topic: "/hololens/natural_input_capture/start",
    type: "std_msgs/Empty",
    no_drop: true
  },
  { # Receive start messages
    client_topic: "/hololens/natural_input_capture/stop",
    rbf_topic: "/hololens/natural_input_capture/stop",
    type: "std_msgs/Empty",
    no_drop: true
  },
  { # Receive microphone data
    client_topic: "/hololens/microphone/data",
    rbf_topic: "/hololens/microphone/data",
    type: "audio_common_msgs/AudioData",
    no_drop: false
  },
  {
    client_topic: "/tf",
    rbf_topic: "/augre/tf",
    type: "tf2_msgs/TFMessage",
    no_drop: true
  },
  { # Receive image data
    client_topic: "/hololens/LEFT_LEFT/image",
    rbf_topic: "/hololens/LEFT_LEFT/image/raw",
    type: "sensor_msgs/Image",
    no_drop: false
  },
  { # Receive image messages
    client_topic: "/hololens/LEFT_FRONT/image",
    rbf_topic: "/hololens/LEFT_FRONT/image/raw",
    type: "sensor_msgs/Image",
    no_drop: false
  },
  { # Receive image messages
    client_topic: "/hololens/RIGHT_RIGHT/image",
    rbf_topic: "/hololens/RIGHT_RIGHT/image/raw",
    type: "sensor_msgs/Image",
    no_drop: false
  },
  { # Receive image messages
    client_topic: "/hololens/RIGHT_FRONT/image",
    rbf_topic: "/hololens/RIGHT_FRONT/image/raw",
    type: "sensor_msgs/Image",
    no_drop: false
  },
  { # Receive image messages
    client_topic: "/hololens/PV/image/compressed",
    rbf_topic: "/hololens/PV/image",
    type: "sensor_msgs/CompressedImage",
    no_drop: false
  }
]